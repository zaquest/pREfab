// Generated by psc-bundle 0.9.2
var PS = {};
(function(exports) {
    "use strict";

  // module Data.Functor

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["apply"] = apply;
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  // module Data.Unit

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  // module Data.Show

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showString"] = showString;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var logShow = function (dictShow) {
      return function (a) {
          return $foreign.log(Data_Show.show(dictShow)(a));
      };
  };
  exports["logShow"] = logShow;
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.select = function(selector) {
      return function() {
          return jQuery(selector);
      };
  };

  exports.getValue = function(ob) {
      return function() {
          return ob.val();
      };
  };

  exports.on = function(evt) {
      return function(act) {
          return function(ob) {
              return function() {
                  ob.on(evt, function(e) {
                      act(e)(jQuery(this))();
                  });
              };
          };
      };
  };

  exports.preventDefault = function(e) {
      return function() {
          e.preventDefault();
      };
  };
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  // module Data.Bounded

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  // module Data.Eq

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };                                    
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq); 
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  // module Data.Ord.Unsafe

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                       
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Data.Ring

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
    "use strict";

  // module Data.Semiring

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                 
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["zero"] = zero;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Ring = function (__superclass_Data$dotSemiring$dotSemiring_0, sub) {
      this["__superclass_Data.Semiring.Semiring_0"] = __superclass_Data$dotSemiring$dotSemiring_0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  }; 
  var ringNumber = new Ring(function () {
      return Data_Semiring.semiringNumber;
  }, $foreign.numSub);
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()))(a);
      };
  };
  exports["Ring"] = Ring;
  exports["negate"] = negate;
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
  exports["ringNumber"] = ringNumber;
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  }; 
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var $27 = compare(dictOrd)(x)(y);
              if ($27 instanceof Data_Ordering.LT) {
                  return y;
              };
              if ($27 instanceof Data_Ordering.EQ) {
                  return x;
              };
              if ($27 instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ $27.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var $28 = compare(dictOrd)(x)(y);
              if ($28 instanceof Data_Ordering.LT) {
                  return x;
              };
              if ($28 instanceof Data_Ordering.EQ) {
                  return x;
              };
              if ($28 instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ $28.constructor.name ]);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["max"] = max;
  exports["min"] = min;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Ordering = PS["Data.Ordering"];        
  var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // module Data.HeytingAlgebra

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var BooleanAlgebra = function (__superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0) {
      this["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"] = __superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0;
  }; 
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return Data_HeytingAlgebra.heytingAlgebraBoolean;
  });
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
})(PS["Data.BooleanAlgebra"] = PS["Data.BooleanAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];        
  var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
      this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Category = PS["Control.Category"];        
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                      
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar29) {
                  return $dollar29;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (v) {
          return function (v1) {
              if (v instanceof Nothing && v1 instanceof Nothing) {
                  return true;
              };
              if (v instanceof Just && v1 instanceof Just) {
                  return Data_Eq.eq(dictEq)(v.value0)(v1.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 78, column 3 - line 78, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 137, column 3 - line 137, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Just"] = Just;
  exports["Nothing"] = Nothing;
  exports["fromJust"] = fromJust;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });
  var runFirst = function (v) {
      return v;
  };
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["runFirst"] = runFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];        
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var runConj = function (v) {
      return v;
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["runConj"] = runConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($164) {
                  return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($164));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var all = function (dictFoldable) {
      return function (dictBooleanAlgebra) {
          return function (p) {
              return function ($171) {
                  return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($172) {
                      return Data_Monoid_Conj.Conj(p($172));
                  })($171));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["for_"] = for_;
  exports["sum"] = sum;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return function (tma) {
              return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var showEither = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              if (v instanceof Left) {
                  return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Right) {
                  return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
              };
              throw new Error("Failed pattern match at Data.Either line 171, column 3 - line 172, column 3: " + [ v.constructor.name ]);
          });
      };
  };
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 46, column 3 - line 46, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 53, column 3 - line 53, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 89, column 3 - line 89, column 28: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["showEither"] = showEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  // module Math

  exports.abs = Math.abs;

  exports.ceil = Math.ceil;

  exports.round = Math.round;

  exports.sqrt = Math.sqrt;    

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["ceil"] = $foreign.ceil;
  exports["pi"] = $foreign.pi;
  exports["round"] = $foreign.round;
  exports["sqrt"] = $foreign.sqrt;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];        
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
          });
      };
      throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 67, column 56: " + [ x.constructor.name ]);
  };
  var round = function ($3) {
      return unsafeClamp($$Math.round($3));
  };               
  var ceil = function ($5) {
      return unsafeClamp($$Math.ceil($5));
  };
  exports["ceil"] = ceil;
  exports["fromNumber"] = fromNumber;
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
  exports["round"] = round;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  };
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof TypeMismatch) {
          return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
      };
      if (v instanceof ErrorAtIndex) {
          return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
      };
      if (v instanceof ErrorAtProperty) {
          return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
      };
      if (v instanceof JSONError) {
          return "JSON error: " + v.value0;
      };
      throw new Error("Failed pattern match at Data.Foreign line 53, column 3 - line 53, column 87: " + [ v.constructor.name ]);
  });
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["showForeignError"] = showForeignError;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.JQuery"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foreign = PS["Data.Foreign"];
  var DOM = PS["DOM"];
  exports["getValue"] = $foreign.getValue;
  exports["on"] = $foreign.on;
  exports["preventDefault"] = $foreign.preventDefault;
  exports["select"] = $foreign.select;
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var CommutativeRing = function (__superclass_Data$dotRing$dotRing_0) {
      this["__superclass_Data.Ring.Ring_0"] = __superclass_Data$dotRing$dotRing_0;
  }; 
  var commutativeRingNumber = new CommutativeRing(function () {
      return Data_Ring.ringNumber;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingNumber"] = commutativeRingNumber;
})(PS["Data.CommutativeRing"] = PS["Data.CommutativeRing"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Base = PS["Base"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Either = PS["Data.Either"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var runState = function (v) {
      return v;
  };
  var put = function (s) {
      return function (v) {
          return new Data_Tuple.Tuple(Data_Unit.unit, s);
      };
  };
  var modify = function (f) {
      return function (s) {
          return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
      };
  };
  var get = function (st) {
      return new Data_Tuple.Tuple(st, st);
  };
  var functorState = new Data_Functor.Functor(function (f) {
      return function (v) {
          return function (st) {
              var res = v(st);
              var s$prime = Data_Tuple.snd(res);
              var a = Data_Tuple.fst(res);
              return new Data_Tuple.Tuple(f(a), s$prime);
          };
      };
  });
  var execState = function (v) {
      return function (i) {
          return Data_Tuple.snd(v(i));
      };
  };
  var evalState = function (v) {
      return function (i) {
          return Data_Tuple.fst(v(i));
      };
  };
  var applyState = new Control_Apply.Apply(function () {
      return functorState;
  }, function (v) {
      return function (v1) {
          return function (s) {
              var res = v(s);
              var s$prime = Data_Tuple.snd(res);
              var res$prime = v1(s$prime);
              var s$prime$prime = Data_Tuple.snd(res$prime);
              var f = Data_Tuple.fst(res);
              var a = Data_Tuple.fst(res$prime);
              return new Data_Tuple.Tuple(f(a), s$prime$prime);
          };
      };
  });
  var bindState = new Control_Bind.Bind(function () {
      return applyState;
  }, function (v) {
      return function (k) {
          return function (s) {
              var res = v(s);
              var s$prime = Data_Tuple.snd(res);
              var a = Data_Tuple.fst(res);
              var res$prime = runState(k(a))(s$prime);
              var b = Data_Tuple.fst(res$prime);
              var s$prime$prime = Data_Tuple.snd(res$prime);
              return new Data_Tuple.Tuple(b, s$prime$prime);
          };
      };
  });
  var applicativeState = new Control_Applicative.Applicative(function () {
      return applyState;
  }, function (a) {
      return Data_Tuple.Tuple.create(a);
  });
  exports["evalState"] = evalState;
  exports["execState"] = execState;
  exports["get"] = get;
  exports["modify"] = modify;
  exports["put"] = put;
  exports["runState"] = runState;
  exports["functorState"] = functorState;
  exports["applyState"] = applyState;
  exports["applicativeState"] = applicativeState;
  exports["bindState"] = bindState;
})(PS["Control.Monad.Transformerless.State"] = PS["Control.Monad.Transformerless.State"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports.innerWidth = function (window) {
    return function () {
      return window.innerWidth;
    };
  };

  exports.innerHeight = function (window) {
    return function () {
      return window.innerHeight;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["innerHeight"] = $foreign.innerHeight;
  exports["innerWidth"] = $foreign.innerWidth;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };

  exports.fromFoldableImpl = (function () {
    // jshint maxparams: 2
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      while (list !== emptyList) {
        result[count++] = list.head;
        list = list.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  exports._insertAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i > l.length) return nothing;
            var l1 = l.slice();
            l1.splice(i, 0, a);
            return just(l1);
          };
        };
      };
    };
  };

  exports._updateAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i >= l.length) return nothing;
            var l1 = l.slice();
            l1[i] = a;
            return just(l1);
          };
        };
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];      
  var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var nubBy = function (eq) {
      return function (xs) {
          var $50 = uncons(xs);
          if ($50 instanceof Data_Maybe.Just) {
              return $foreign.cons($50.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                  return !eq($50.value0.head)(y);
              })($50.value0.tail)));
          };
          if ($50 instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          throw new Error("Failed pattern match at Data.Array line 525, column 3 - line 527, column 18: " + [ $50.constructor.name ]);
      };
  };
  var nub = function (dictEq) {
      return nubBy(Data_Eq.eq(dictEq));
  };
  var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var head = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (v) {
          return new Data_Maybe.Just(x);
      };
  });
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  exports["fromFoldable"] = fromFoldable;
  exports["head"] = head;
  exports["insertAt"] = insertAt;
  exports["nub"] = nub;
  exports["nubBy"] = nubBy;
  exports["tail"] = tail;
  exports["uncons"] = uncons;
  exports["updateAt"] = updateAt;
  exports["length"] = $foreign.length;
  exports["range"] = $foreign.range;
  exports["snoc"] = $foreign.snoc;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.Partial

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array.Partial"] = PS["Data.Array.Partial"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Array.Partial"];
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Ring = PS["Data.Ring"];        
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  exports["unsafeIndex"] = unsafeIndex;
})(PS["Data.Array.Partial"] = PS["Data.Array.Partial"] || {});
(function(exports) {
    "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var $$Math = PS["Math"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Approx = function (x) {
      return x;
  };
  var Epsilon = function (__superclass_Data$dotOrd$dotOrd_0, nearZero) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.nearZero = nearZero;
  };
  var toExact = function (v) {
      return v;
  };
  var numberEpsilon = new Epsilon(function () {
      return Data_Ord.ordNumber;
  }, function (x) {
      return $$Math.abs(x) <= 1.0e-12;
  });
  var nearZero = function (dict) {
      return dict.nearZero;
  };

  /**
 * # INLINE nearZero #
 */  
  var intEpsilon = new Epsilon(function () {
      return Data_Ord.ordInt;
  }, function (x) {
      return x === 0;
  });

  /**
 * # INLINE nearZero #
 */  
  var approxCompare = function (dictRing) {
      return function (dictEpsilon) {
          return function (x) {
              return function (y) {
                  var $22 = nearZero(dictEpsilon)(Data_Ring.sub(dictRing)(x)(y));
                  if ($22) {
                      return Data_Ordering.EQ.value;
                  };
                  if (!$22) {
                      return Data_Ord.compare(dictEpsilon["__superclass_Data.Ord.Ord_0"]())(x)(y);
                  };
                  throw new Error("Failed pattern match at Linear.Epsilon line 19, column 21 - line 21, column 40: " + [ $22.constructor.name ]);
              };
          };
      };
  };
  var approxEQ = function (dictRing) {
      return function (dictEpsilon) {
          return function (x) {
              return function (y) {
                  return Data_Eq.eq(Data_Ordering.eqOrdering)(approxCompare(dictRing)(dictEpsilon)(x)(y))(Data_Ordering.EQ.value);
              };
          };
      };
  };
  var approxEqInstance = function (dictRing) {
      return function (dictEpsilon) {
          return new Data_Eq.Eq(function (v) {
              return function (v1) {
                  return approxEQ(dictRing)(dictEpsilon)(v)(v1);
              };
          });
      };
  };
  var approxGreaterThanOrEq = function (dictRing) {
      return function (dictEpsilon) {
          return function (x) {
              return function (y) {
                  var o = approxCompare(dictRing)(dictEpsilon)(x)(y);
                  return Data_Eq.eq(Data_Ordering.eqOrdering)(o)(Data_Ordering.GT.value) || Data_Eq.eq(Data_Ordering.eqOrdering)(o)(Data_Ordering.EQ.value);
              };
          };
      };
  };
  var approxLessThanOrEq = function (dictRing) {
      return function (dictEpsilon) {
          return function (x) {
              return function (y) {
                  var o = approxCompare(dictRing)(dictEpsilon)(x)(y);
                  return Data_Eq.eq(Data_Ordering.eqOrdering)(o)(Data_Ordering.LT.value) || Data_Eq.eq(Data_Ordering.eqOrdering)(o)(Data_Ordering.EQ.value);
              };
          };
      };
  };
  exports["Approx"] = Approx;
  exports["Epsilon"] = Epsilon;
  exports["approxCompare"] = approxCompare;
  exports["approxEQ"] = approxEQ;
  exports["approxGreaterThanOrEq"] = approxGreaterThanOrEq;
  exports["approxLessThanOrEq"] = approxLessThanOrEq;
  exports["nearZero"] = nearZero;
  exports["toExact"] = toExact;
  exports["numberEpsilon"] = numberEpsilon;
  exports["intEpsilon"] = intEpsilon;
  exports["approxEqInstance"] = approxEqInstance;
})(PS["Linear.Epsilon"] = PS["Linear.Epsilon"] || {});
(function(exports) {
    "use strict";

  exports.numDiv = function (n1) {
    return function (n2) {
      return n1 / n2;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.EuclideanRing"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var EuclideanRing = function (__superclass_Data$dotCommutativeRing$dotCommutativeRing_0, degree, div, mod) {
      this["__superclass_Data.CommutativeRing.CommutativeRing_0"] = __superclass_Data$dotCommutativeRing$dotCommutativeRing_0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingNumber = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingNumber;
  }, function (v) {
      return 1;
  }, $foreign.numDiv, function (v) {
      return function (v1) {
          return 0.0;
      };
  });                                                      
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingNumber"] = euclideanRingNumber;
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];        
  var Additive = function (__superclass_Data$dotFunctor$dotFunctor_0, aZero, lerp, liftI2, liftU2, vAddV, vSubV) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.aZero = aZero;
      this.lerp = lerp;
      this.liftI2 = liftI2;
      this.liftU2 = liftU2;
      this.vAddV = vAddV;
      this.vSubV = vSubV;
  };
  var vSubV = function (dict) {
      return dict.vSubV;
  };
  var vAddV = function (dict) {
      return dict.vAddV;
  };
  var sMulF = function (dictFunctor) {
      return function (dictSemiring) {
          return function (s) {
              return function (f) {
                  return Data_Functor.map(dictFunctor)(Data_Semiring.mul(dictSemiring)(s))(f);
              };
          };
      };
  };
  var liftU2 = function (dict) {
      return dict.liftU2;
  };
  var liftI2 = function (dict) {
      return dict.liftI2;
  };
  var lerp = function (dict) {
      return dict.lerp;
  };
  var fMulS = function (dictFunctor) {
      return function (dictSemiring) {
          return function (f) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(Data_Function.flip(Data_Semiring.mul(dictSemiring))(s))(f);
              };
          };
      };
  };
  var fDivS = function (dictFunctor) {
      return function (dictEuclideanRing) {
          return function (f) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing))(s))(f);
              };
          };
      };
  };
  var defaultZero = function (dictApplicative) {
      return function (dictSemiring) {
          return Control_Applicative.pure(dictApplicative)(Data_Semiring.zero(dictSemiring));
      };
  };
  var defaultLiftI2 = function (dictApplicative) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(x))(y);
              };
          };
      };
  };
  var defaultLiftU2 = function (dictApplicative) {
      return defaultLiftI2(dictApplicative);
  };
  var defaultVAddV = function (dictApplicative) {
      return function (dictSemiring) {
          return function (x) {
              return function (y) {
                  return defaultLiftU2(dictApplicative)(Data_Semiring.add(dictSemiring))(x)(y);
              };
          };
      };
  };
  var defaultVSubV = function (dictApplicative) {
      return function (dictRing) {
          return function (x) {
              return function (y) {
                  return defaultLiftU2(dictApplicative)(Data_Ring.sub(dictRing))(x)(y);
              };
          };
      };
  };
  var defaultLerp = function (dictApplicative) {
      return function (dictRing) {
          return function (alpha) {
              return function (u) {
                  return function (v) {
                      return defaultVAddV(dictApplicative)(dictRing["__superclass_Data.Semiring.Semiring_0"]())(sMulF((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(dictRing["__superclass_Data.Semiring.Semiring_0"]())(alpha)(u))(sMulF((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(dictRing["__superclass_Data.Semiring.Semiring_0"]())(Data_Ring.sub(dictRing)(Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]()))(alpha))(v));
                  };
              };
          };
      };
  };
  var aZero = function (dict) {
      return dict.aZero;
  };
  exports["Additive"] = Additive;
  exports["aZero"] = aZero;
  exports["defaultLerp"] = defaultLerp;
  exports["defaultLiftI2"] = defaultLiftI2;
  exports["defaultLiftU2"] = defaultLiftU2;
  exports["defaultVAddV"] = defaultVAddV;
  exports["defaultVSubV"] = defaultVSubV;
  exports["defaultZero"] = defaultZero;
  exports["fDivS"] = fDivS;
  exports["fMulS"] = fMulS;
  exports["lerp"] = lerp;
  exports["liftI2"] = liftI2;
  exports["liftU2"] = liftU2;
  exports["sMulF"] = sMulF;
  exports["vAddV"] = vAddV;
  exports["vSubV"] = vSubV;
})(PS["Linear.Vector"] = PS["Linear.Vector"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Data_Foldable = PS["Data.Foldable"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Linear_Vector = PS["Linear.Vector"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];        
  var Metric = function (__superclass_Linear$dotVector$dotAdditive_0, distance, dot, norm, qd, quadrance, signorm) {
      this["__superclass_Linear.Vector.Additive_0"] = __superclass_Linear$dotVector$dotAdditive_0;
      this.distance = distance;
      this.dot = dot;
      this.norm = norm;
      this.qd = qd;
      this.quadrance = quadrance;
      this.signorm = signorm;
  };
  var signorm = function (dict) {
      return dict.signorm;
  };
  var quadrance = function (dict) {
      return dict.quadrance;
  };
  var qd = function (dict) {
      return dict.qd;
  };
  var norm = function (dict) {
      return dict.norm;
  };
  var dot = function (dict) {
      return dict.dot;
  };
  var distance = function (dict) {
      return dict.distance;
  };
  var defaultDot = function (dictAdditive) {
      return function (dictFoldable) {
          return function (dictSemiring) {
              return function (x) {
                  return function (y) {
                      return Data_Function.apply(Data_Foldable.sum(dictFoldable)(dictSemiring))(Linear_Vector.liftI2(dictAdditive)(Data_Semiring.mul(dictSemiring))(x)(y));
                  };
              };
          };
      };
  };
  var defaultQuadrance = function (dictAdditive) {
      return function (dictFoldable) {
          return function (dictSemiring) {
              return function (v) {
                  return defaultDot(dictAdditive)(dictFoldable)(dictSemiring)(v)(v);
              };
          };
      };
  };
  var defaultNorm = function (dictAdditive) {
      return function (dictFoldable) {
          return function (v) {
              return $$Math.sqrt(defaultQuadrance(dictAdditive)(dictFoldable)(Data_Semiring.semiringNumber)(v));
          };
      };
  };
  var defaultSignorm = function (dictAdditive) {
      return function (dictFoldable) {
          return function (v) {
              return Linear_Vector.fDivS(dictAdditive["__superclass_Data.Functor.Functor_0"]())(Data_EuclideanRing.euclideanRingNumber)(v)(defaultNorm(dictAdditive)(dictFoldable)(v));
          };
      };
  };
  var defaultQd = function (dictAdditive) {
      return function (dictFoldable) {
          return function (dictRing) {
              return function (x) {
                  return function (y) {
                      return defaultQuadrance(dictAdditive)(dictFoldable)(dictRing["__superclass_Data.Semiring.Semiring_0"]())(Linear_Vector.vSubV(dictAdditive)(dictRing)(x)(y));
                  };
              };
          };
      };
  };
  var defaultDistance = function (dictAdditive) {
      return function (dictFoldable) {
          return function (x) {
              return function (y) {
                  return defaultNorm(dictAdditive)(dictFoldable)(Linear_Vector.vSubV(dictAdditive)(Data_Ring.ringNumber)(x)(y));
              };
          };
      };
  };
  exports["Metric"] = Metric;
  exports["defaultDistance"] = defaultDistance;
  exports["defaultDot"] = defaultDot;
  exports["defaultNorm"] = defaultNorm;
  exports["defaultQd"] = defaultQd;
  exports["defaultQuadrance"] = defaultQuadrance;
  exports["defaultSignorm"] = defaultSignorm;
  exports["distance"] = distance;
  exports["dot"] = dot;
  exports["norm"] = norm;
  exports["qd"] = qd;
  exports["quadrance"] = quadrance;
  exports["signorm"] = signorm;
})(PS["Linear.Metric"] = PS["Linear.Metric"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Linear_Vector = PS["Linear.Vector"];
  var Linear_Metric = PS["Linear.Metric"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var R2 = function (r2) {
      this.r2 = r2;
  };
  var v2Semiring = function (dictSemiring) {
      return new Data_Semiring.Semiring(function (v) {
          return function (v1) {
              return {
                  x: Data_Semiring.add(dictSemiring)(v.x)(v1.x), 
                  y: Data_Semiring.add(dictSemiring)(v.y)(v1.y)
              };
          };
      }, function (v) {
          return function (v1) {
              return {
                  x: Data_Semiring.mul(dictSemiring)(v.x)(v1.x), 
                  y: Data_Semiring.mul(dictSemiring)(v.y)(v1.y)
              };
          };
      }, {
          x: Data_Semiring.one(dictSemiring), 
          y: Data_Semiring.one(dictSemiring)
      }, {
          x: Data_Semiring.zero(dictSemiring), 
          y: Data_Semiring.zero(dictSemiring)
      });
  };
  var v2Ring = function (dictRing) {
      return new Data_Ring.Ring(function () {
          return v2Semiring(dictRing["__superclass_Data.Semiring.Semiring_0"]());
      }, function (v) {
          return function (v1) {
              return {
                  x: Data_Ring.sub(dictRing)(v.x)(v1.x), 
                  y: Data_Ring.sub(dictRing)(v.y)(v1.y)
              };
          };
      });
  };
  var v2Functor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return {
              x: f(v.x), 
              y: f(v.y)
          };
      };
  });                                                      
  var r2 = function (dict) {
      return dict.r2;
  };
  var pAddV = function (dictSemiring) {
      return function (v) {
          return function (v1) {
              return {
                  x: Data_Semiring.add(dictSemiring)(v.x)(v1.x), 
                  y: Data_Semiring.add(dictSemiring)(v.y)(v1.y)
              };
          };
      };
  };
  var p2r2 = new R2(function (v) {
      return v;
  });
  var p2Semiring = function (dictSemiring) {
      return new Data_Semiring.Semiring(function (v) {
          return function (v1) {
              return {
                  x: Data_Semiring.add(dictSemiring)(v.x)(v1.x), 
                  y: Data_Semiring.add(dictSemiring)(v.y)(v1.y)
              };
          };
      }, function (v) {
          return function (v1) {
              return {
                  x: Data_Semiring.mul(dictSemiring)(v.x)(v1.x), 
                  y: Data_Semiring.mul(dictSemiring)(v.y)(v1.y)
              };
          };
      }, {
          x: Data_Semiring.one(dictSemiring), 
          y: Data_Semiring.one(dictSemiring)
      }, {
          x: Data_Semiring.zero(dictSemiring), 
          y: Data_Semiring.zero(dictSemiring)
      });
  };
  var p2Ring = function (dictRing) {
      return new Data_Ring.Ring(function () {
          return p2Semiring(dictRing["__superclass_Data.Semiring.Semiring_0"]());
      }, function (v) {
          return function (v1) {
              return {
                  x: Data_Ring.sub(dictRing)(v.x)(v1.x), 
                  y: Data_Ring.sub(dictRing)(v.y)(v1.y)
              };
          };
      });
  };
  var p2Functor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return {
              x: f(v.x), 
              y: f(v.y)
          };
      };
  });
  var p2Foldable = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.x))(f(v.y));
          };
      };
  }, function (f) {
      return function (acc) {
          return function (v) {
              return f(f(acc)(v.x))(v.y);
          };
      };
  }, function (f) {
      return function (acc) {
          return function (v) {
              return f(v.x)(f(v.y)(acc));
          };
      };
  });
  var p2Eq = function (dictEq) {
      return new Data_Eq.Eq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v.x)(v1.x) && Data_Eq.eq(dictEq)(v.y)(v1.y);
          };
      });
  };
  var p2Ord = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return p2Eq(dictOrd["__superclass_Data.Eq.Eq_0"]());
      }, function (v) {
          return function (v1) {
              var cmp = Data_Ord.compare(dictOrd)(v.x)(v1.x);
              if (cmp instanceof Data_Ordering.EQ) {
                  return Data_Ord.compare(dictOrd)(v.y)(v1.y);
              };
              return cmp;
          };
      });
  };
  var p2Epsilon = function (dictEpsilon) {
      return new Linear_Epsilon.Epsilon(function () {
          return p2Ord(dictEpsilon["__superclass_Data.Ord.Ord_0"]());
      }, function (v) {
          return Linear_Epsilon.nearZero(dictEpsilon)(v.x) && Linear_Epsilon.nearZero(dictEpsilon)(v.y);
      });
  };
  var p2Diff = function (dictRing) {
      return function (v) {
          return function (v1) {
              return {
                  x: Data_Ring.sub(dictRing)(v.x)(v1.x), 
                  y: Data_Ring.sub(dictRing)(v.y)(v1.y)
              };
          };
      };
  };
  var p2 = function (x) {
      return function (y) {
          return {
              x: x, 
              y: y
          };
      };
  };
  var p2Apply = new Control_Apply.Apply(function () {
      return p2Functor;
  }, function (v) {
      return function (v1) {
          return p2(v.x(v1.x))(v.y(v1.y));
      };
  });
  var p2Applicative = new Control_Applicative.Applicative(function () {
      return p2Apply;
  }, function (x) {
      return p2(x)(x);
  });
  var p2Additive = new Linear_Vector.Additive(function () {
      return p2Functor;
  }, function (dictSemiring) {
      return Linear_Vector.defaultZero(p2Applicative)(dictSemiring);
  }, function (dictRing) {
      return Linear_Vector.defaultLerp(p2Applicative)(dictRing);
  }, Linear_Vector.defaultLiftI2(p2Applicative), Linear_Vector.defaultLiftU2(p2Applicative), function (dictSemiring) {
      return Linear_Vector.defaultVAddV(p2Applicative)(dictSemiring);
  }, function (dictRing) {
      return Linear_Vector.defaultVSubV(p2Applicative)(dictRing);
  });
  var p2Metric = new Linear_Metric.Metric(function () {
      return p2Additive;
  }, Linear_Metric.defaultDistance(p2Additive)(p2Foldable), function (dictSemiring) {
      return Linear_Metric.defaultDot(p2Additive)(p2Foldable)(dictSemiring);
  }, Linear_Metric.defaultNorm(p2Additive)(p2Foldable), function (dictRing) {
      return Linear_Metric.defaultQd(p2Additive)(p2Foldable)(dictRing);
  }, function (dictSemiring) {
      return Linear_Metric.defaultQuadrance(p2Additive)(p2Foldable)(dictSemiring);
  }, Linear_Metric.defaultSignorm(p2Additive)(p2Foldable));
  var invY = function (dictRing) {
      return function (v) {
          return {
              x: v.x, 
              y: Data_Ring.negate(dictRing)(v.y)
          };
      };
  };
  var crossZ = function (dictRing) {
      return function (v) {
          return function (v1) {
              return Data_Ring.sub(dictRing)(Data_Semiring.mul(dictRing["__superclass_Data.Semiring.Semiring_0"]())(v.x)(v1.y))(Data_Semiring.mul(dictRing["__superclass_Data.Semiring.Semiring_0"]())(v.y)(v1.x));
          };
      };
  };
  exports["R2"] = R2;
  exports["crossZ"] = crossZ;
  exports["invY"] = invY;
  exports["p2"] = p2;
  exports["p2Diff"] = p2Diff;
  exports["pAddV"] = pAddV;
  exports["r2"] = r2;
  exports["p2r2"] = p2r2;
  exports["v2Semiring"] = v2Semiring;
  exports["p2Semiring"] = p2Semiring;
  exports["v2Ring"] = v2Ring;
  exports["p2Ring"] = p2Ring;
  exports["p2Eq"] = p2Eq;
  exports["p2Ord"] = p2Ord;
  exports["v2Functor"] = v2Functor;
  exports["p2Functor"] = p2Functor;
  exports["p2Apply"] = p2Apply;
  exports["p2Applicative"] = p2Applicative;
  exports["p2Additive"] = p2Additive;
  exports["p2Metric"] = p2Metric;
  exports["p2Epsilon"] = p2Epsilon;
  exports["p2Foldable"] = p2Foldable;
})(PS["Linear.R2"] = PS["Linear.R2"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Control_Category = PS["Control.Category"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var tail = function (v) {
      if (v instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 232, column 1 - line 232, column 19: " + [ v.constructor.name ]);
  }; 
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($387) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($387));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, (function () {
      var go = function (__copy_v) {
          return function (__copy_b) {
              return function (__copy_v1) {
                  var v = __copy_v;
                  var b = __copy_b;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v1 instanceof Nil) {
                          return b;
                      };
                      if (v1 instanceof Cons) {
                          var __tco_v = v;
                          var __tco_b = v(b)(v1.value0);
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          b = __tco_b;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 734, column 3 - line 737, column 49: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (v) {
      return function (b) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return b;
              };
              if (v1 instanceof Cons) {
                  return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
              };
              throw new Error("Failed pattern match at Data.List line 732, column 3 - line 732, column 20: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
          };
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["fromFoldable"] = fromFoldable;
  exports["tail"] = tail;
  exports["foldableList"] = foldableList;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Linear_R2_1 = PS["Linear.R2"];
  var Linear_R2_1 = PS["Linear.R2"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Linear_Vector = PS["Linear.Vector"];
  var Linear_Metric_1 = PS["Linear.Metric"];
  var Linear_Metric_1 = PS["Linear.Metric"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Seg = (function () {
      function Seg(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Seg.create = function (value0) {
          return function (value1) {
              return new Seg(value0, value1);
          };
      };
      return Seg;
  })();
  var nearestPoint = function (p) {
      return function (v) {
          var len2 = Linear_Metric_1.qd(Linear_R2_1.p2Metric)(Data_Ring.ringNumber)(v.value0)(v.value1);
          var t = Data_Ord.max(Data_Ord.ordNumber)(0.0)(Data_Ord.min(Data_Ord.ordNumber)(1.0)(Linear_Metric_1.dot(Linear_R2_1.p2Metric)(Data_Semiring.semiringNumber)(Data_Ring.sub(Linear_R2_1.p2Ring(Data_Ring.ringNumber))(p)(v.value0))(Data_Ring.sub(Linear_R2_1.p2Ring(Data_Ring.ringNumber))(v.value1)(v.value0)) / len2));
          var proj = Linear_R2_1.pAddV(Data_Semiring.semiringNumber)(v.value0)(Linear_Vector.sMulF(Linear_R2_1.v2Functor)(Data_Semiring.semiringNumber)(t)(Linear_R2_1.p2Diff(Data_Ring.ringNumber)(v.value1)(v.value0)));
          var $16 = Linear_Epsilon.nearZero(Linear_Epsilon.numberEpsilon)(len2);
          if ($16) {
              return v.value0;
          };
          if (!$16) {
              return proj;
          };
          throw new Error("Failed pattern match at Data.Segment line 61, column 28 - line 61, column 61: " + [ $16.constructor.name ]);
      };
  };
  var intersection = function (dictEpsilon) {
      return function (dictEuclideanRing) {
          return function (v) {
              return function (v1) {
                  var denom = Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v.value0.x)(v.value1.x))(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v1.value0.y)(v1.value1.y)))(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v.value0.y)(v.value1.y))(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v1.value0.x)(v1.value1.x)));
                  var $21 = Linear_Epsilon.nearZero(dictEpsilon)(denom);
                  if ($21) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (!$21) {
                      var c34 = Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(v1.value0.x)(v1.value1.y))(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(v1.value0.y)(v1.value1.x));
                      var c12 = Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(v.value0.x)(v.value1.y))(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(v.value0.y)(v.value1.x));
                      var x = Data_EuclideanRing.div(dictEuclideanRing)(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(c12)(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v1.value0.x)(v1.value1.x)))(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v.value0.x)(v.value1.x))(c34)))(denom);
                      var y = Data_EuclideanRing.div(dictEuclideanRing)(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(c12)(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v1.value0.y)(v1.value1.y)))(Data_Semiring.mul(((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())["__superclass_Data.Semiring.Semiring_0"]())(Data_Ring.sub((dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]())["__superclass_Data.Ring.Ring_0"]())(v.value0.y)(v.value1.y))(c34)))(denom);
                      return new Data_Maybe.Just(Linear_R2_1.p2(x)(y));
                  };
                  throw new Error("Failed pattern match at Data.Segment line 33, column 7 - line 39, column 32: " + [ $21.constructor.name ]);
              };
          };
      };
  };
  var distance = function (p) {
      return function (ab) {
          return Linear_Metric_1.distance(Linear_R2_1.p2Metric)(p)(nearestPoint(p)(ab));
      };
  };
  var crossZ = function (dictRing) {
      return function (dictEpsilon) {
          return function (p) {
              return function (v) {
                  return Linear_R2_1.crossZ(dictRing)(Linear_R2_1.p2Diff(dictRing)(v.value1)(v.value0))(Linear_R2_1.p2Diff(dictRing)(p)(v.value1));
              };
          };
      };
  };
  var inside = function (dictRing) {
      return function (dictEpsilon) {
          return function (p) {
              return function (seg) {
                  return Linear_Epsilon.approxGreaterThanOrEq(dictRing)(dictEpsilon)(crossZ(dictRing)(dictEpsilon)(p)(seg))(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
              };
          };
      };
  };
  var outside = function (dictRing) {
      return function (dictEpsilon) {
          return function (p) {
              return function (seg) {
                  return Linear_Epsilon.approxLessThanOrEq(dictRing)(dictEpsilon)(crossZ(dictRing)(dictEpsilon)(p)(seg))(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
              };
          };
      };
  };
  exports["Seg"] = Seg;
  exports["crossZ"] = crossZ;
  exports["distance"] = distance;
  exports["inside"] = inside;
  exports["intersection"] = intersection;
  exports["outside"] = outside;
})(PS["Data.Segment"] = PS["Data.Segment"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Linear_R2_1 = PS["Linear.R2"];
  var Linear_R2_1 = PS["Linear.R2"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Corner = (function () {
      function Corner(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Corner.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Corner(value0, value1, value2);
              };
          };
      };
      return Corner;
  })();
  var crossZ = function (dictRing) {
      return function (v) {
          return Linear_R2_1.crossZ(dictRing)(Linear_R2_1.p2Diff(dictRing)(v.value1)(v.value0))(Linear_R2_1.p2Diff(dictRing)(v.value2)(v.value1));
      };
  };
  var isLine = function (dictRing) {
      return function (dictEpsilon) {
          return function ($12) {
              return Linear_Epsilon.nearZero(dictEpsilon)(crossZ(dictRing)($12));
          };
      };
  };
  var clockWise = function (dictRing) {
      return function (dictEpsilon) {
          return function (c) {
              return Linear_Epsilon.approxGreaterThanOrEq(dictRing)(dictEpsilon)(crossZ(dictRing)(c))(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
          };
      };
  };
  exports["Corner"] = Corner;
  exports["clockWise"] = clockWise;
  exports["crossZ"] = crossZ;
  exports["isLine"] = isLine;
})(PS["Data.Corner"] = PS["Data.Corner"] || {});
(function(exports) {
    "use strict";
  var Prelude = PS["Prelude"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe_1 = PS["Data.Maybe"];
  var Data_Maybe_1 = PS["Data.Maybe"];
  var Control_Monad_Transformerless_State = PS["Control.Monad.Transformerless.State"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Array = PS["Data.Array"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Boolean = PS["Data.Boolean"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var zipWith3 = function (f) {
      return function (as) {
          return function (bs) {
              return Data_Array.zipWith(Data_Function.apply)(Data_Array.zipWith(f)(as)(bs));
          };
      };
  };
  var whileM_ = function (dictMonad) {
      return function (start) {
          return function (test) {
              return function (body) {
                  if (test(start)) {
                      return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(body(start))(function (v) {
                          return whileM_(dictMonad)(v)(test)(body);
                      });
                  };
                  if (Data_Boolean.otherwise) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at Utils line 26, column 1 - line 28, column 48: " + [ start.constructor.name, test.constructor.name, body.constructor.name ]);
              };
          };
      };
  };

  /**
 *  Like @x `mod` y@ but always returns value in range @[0, y)@, even
 *  if `x` is negative.
 */  
  var quot = function (x) {
      return function (y) {
          var z = x % y;
          var $12 = z < 0;
          if ($12) {
              return z + y | 0;
          };
          if (!$12) {
              return z;
          };
          throw new Error("Failed pattern match at Utils line 43, column 15 - line 45, column 23: " + [ $12.constructor.name ]);
      };
  };
  var fromJust = function (m) {
      return Partial_Unsafe.unsafePartial(function (dictPartial) {
          return Data_Maybe_1.fromJust(dictPartial)(m);
      });
  };
  var foldlA2 = function (dictFoldable) {
      return function (dictApplicative) {
          return function (f) {
              var af = function (v) {
                  return function (a) {
                      if (v instanceof Data_Maybe_1.Nothing) {
                          return new Data_Maybe_1.Just(a);
                      };
                      if (v instanceof Data_Maybe_1.Just) {
                          return new Data_Maybe_1.Just(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(v.value0))(a));
                      };
                      throw new Error("Failed pattern match at Utils line 22, column 9 - line 22, column 30: " + [ v.constructor.name, a.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(af)(Data_Maybe_1.Nothing.value);
          };
      };
  };
  var enumerate = function (dictTraversable) {
      return function (xs) {
          return Data_Function.apply(function ($17) {
              return Data_Function.flip(Control_Monad_Transformerless_State.evalState)(0)(Data_Traversable["for"](Control_Monad_Transformerless_State.applicativeState)(dictTraversable)(xs)($17));
          })(function (x) {
              return Control_Bind.bind(Control_Monad_Transformerless_State.bindState)(Control_Monad_Transformerless_State.get)(function (v) {
                  return Control_Bind.bind(Control_Monad_Transformerless_State.bindState)(Control_Monad_Transformerless_State.put(v + 1 | 0))(function () {
                      return Control_Applicative.pure(Control_Monad_Transformerless_State.applicativeState)({
                          idx: v, 
                          elem: x
                      });
                  });
              });
          });
      };
  };
  var bug = Partial_Unsafe.unsafeCrashWith;
  exports["bug"] = bug;
  exports["enumerate"] = enumerate;
  exports["foldlA2"] = foldlA2;
  exports["fromJust"] = fromJust;
  exports["quot"] = quot;
  exports["whileM_"] = whileM_;
  exports["zipWith3"] = zipWith3;
})(PS["Utils"] = PS["Utils"] || {});
(function(exports) {
    "use strict";
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_Partial = PS["Data.Array.Partial"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Transformerless_State = PS["Control.Monad.Transformerless.State"];
  var Data_List = PS["Data.List"];
  var Data_Enum = PS["Data.Enum"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Linear_R2 = PS["Linear.R2"];
  var Data_Segment_1 = PS["Data.Segment"];
  var Data_Segment_1 = PS["Data.Segment"];
  var Data_Corner_1 = PS["Data.Corner"];
  var Data_Corner_1 = PS["Data.Corner"];
  var Utils = PS["Utils"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];        
  var Poly = function (x) {
      return x;
  };
  var updateAt = function (idx) {
      return function (p) {
          return function (v) {
              var idx$prime = Utils.quot(idx)(Data_Array.length(v));
              return Utils.fromJust(Data_Array.updateAt(idx$prime)(p)(v));
          };
      };
  };
  var uncons = function (v) {
      return Utils.fromJust(Data_Array.uncons(v));
  };
  var rect = function (v) {
      return function (v1) {
          return [ v, Linear_R2.p2(v.x)(v1.y), v1, Linear_R2.p2(v1.x)(v1.y) ];
      };
  };
  var square = function (dictSemiring) {
      return function (side) {
          return function (lo) {
              return rect(lo)(Data_Semiring.add(Linear_R2.p2Semiring(dictSemiring))(lo)(Linear_R2.p2(side)(side)));
          };
      };
  };
  var pruneChain = function (dictRing) {
      return function (dictEpsilon) {
          return function (v) {
              if (v instanceof Data_List.Cons && (v.value1 instanceof Data_List.Cons && v.value1.value1 instanceof Data_List.Cons)) {
                  var tail = (function () {
                      var $52 = Data_Corner_1.isLine(dictRing)(dictEpsilon)(new Data_Corner_1.Corner(v.value0, v.value1.value0, v.value1.value1.value0));
                      if ($52) {
                          return v.value1.value1;
                      };
                      if (!$52) {
                          return v.value1;
                      };
                      throw new Error("Failed pattern match at Data.Polygon line 165, column 14 - line 165, column 59: " + [ $52.constructor.name ]);
                  })();
                  return new Data_List.Cons(v.value0, pruneChain(dictRing)(dictEpsilon)(tail));
              };
              return v;
          };
      };
  };
  var polyToChain = function (v) {
      return Data_List.fromFoldable(Data_Foldable.foldableArray)(v);
  };
  var polyFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Data_Functor.functorArray)(f)(v);
      };
  });
  var polyFoldable = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid)(f)(v);
          };
      };
  }, function (f) {
      return function (acc) {
          return function (v) {
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(acc)(v);
          };
      };
  }, function (f) {
      return function (acc) {
          return function (v) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(acc)(v);
          };
      };
  });
  var polyTraversable = new Data_Traversable.Traversable(function () {
      return polyFoldable;
  }, function () {
      return polyFunctor;
  }, function (dictApplicative) {
      return function (v) {
          return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Poly)(Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)(v));
      };
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Poly)(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(f)(v));
          };
      };
  });
  var points = function (v) {
      return v;
  };
  var origin = function (dictOrd) {
      return function (v) {
          return Data_Function.apply(Utils.fromJust)(Utils.foldlA2(Data_Foldable.foldableArray)(Linear_R2.p2Applicative)(Data_Ord.min(dictOrd))(v));
      };
  };
  var move = function (dictSemiring) {
      return function (poly) {
          return function (v) {
              return Data_Functor.map(polyFunctor)(function (p) {
                  return Linear_R2.pAddV(dictSemiring)(p)(v);
              })(poly);
          };
      };
  };
  var mkPoly = function (ps) {
      if (Data_Array.length(ps) < 3) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just(ps);
      };
      throw new Error("Failed pattern match at Data.Polygon line 53, column 1 - line 54, column 39: " + [ ps.constructor.name ]);
  };
  var length = function (v) {
      return Data_Array.length(v);
  };
  var insertAt = function (idx) {
      return function (p) {
          return function (v) {
              var idx$prime = Utils.quot(idx)(Data_Array.length(v));
              return Utils.fromJust(Data_Array.insertAt(idx$prime)(p)(v));
          };
      };
  };

  /**
 *  | Any index is accepted, because polygon is treated as a cycle
 */  
  var index = function (v) {
      return function (n) {
          return Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
              return Data_Array_Partial.unsafeIndex(dictPartial)(v)(Utils.quot(n)(Data_Array.length(v)));
          });
      };
  };
  var edges = function (v) {
      var $83 = Data_Array.uncons(v);
      if ($83 instanceof Data_Maybe.Nothing) {
          return Utils.bug("edges: got empty polygon");
      };
      if ($83 instanceof Data_Maybe.Just) {
          return Data_Array.zipWith(Data_Segment_1.Seg.create)(v)(Data_Array.snoc($83.value0.tail)($83.value0.head));
      };
      throw new Error("Failed pattern match at Data.Polygon line 60, column 19 - line 63, column 60: " + [ $83.constructor.name ]);
  };

  /**
 *  | `inside p edge` point `p` is `inside` of `edge` if it lies on the
 *  same side of `edge` as the reminder of the clip polygon
 *  Complexity is supposed to be O(nm + k log(k)) where
 *  n - number of points in clip polygon
 *  m - number of points in subject ponlygon
 *  k - number of points in intersection
 *  k log(k) is to remove repeating points in resulting polygon
 *  ^ Intersection
 *  TODO: there's not always intersection
 */  
  var sutherlandHodgman = function (inside) {
      return function (clipPoly) {
          return function (subjPoly) {
              var nub$prime = function ($110) {
                  return Data_Functor.map(Data_Functor.functorArray)(Linear_Epsilon.toExact)(Data_Array.nub(Linear_Epsilon.approxEqInstance(Linear_R2.p2Ring(Data_Ring.ringNumber))(Linear_R2.p2Epsilon(Linear_Epsilon.numberEpsilon)))(Data_Functor.map(Data_Functor.functorArray)(Linear_Epsilon.Approx)($110)));
              };
              var add = Data_Function.flip(Data_Array.snoc);
              return Data_Function.apply(function ($111) {
                  return Poly(nub$prime($111));
              })(Data_Function.apply(Data_Function.flip(Control_Monad_Transformerless_State.execState)(points(subjPoly)))(Data_Function.apply(Data_Foldable.for_(Control_Monad_Transformerless_State.applicativeState)(Data_Foldable.foldableArray)(edges(clipPoly)))(function (v) {
                  var clipEdge = new Data_Segment_1.Seg(v.value0, v.value1);
                  return Control_Bind.bind(Control_Monad_Transformerless_State.bindState)(Data_Functor.map(Control_Monad_Transformerless_State.functorState)(Poly)(Control_Monad_Transformerless_State.get))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Transformerless_State.bindState)(Control_Monad_Transformerless_State.put([  ]))(function () {
                          return Data_Function.apply(Data_Foldable.for_(Control_Monad_Transformerless_State.applicativeState)(Data_Foldable.foldableArray)(edges(v1)))(function (v2) {
                              var subjEdge = new Data_Segment_1.Seg(v2.value0, v2.value1);
                              var $90 = inside(v2.value1)(clipEdge);
                              if ($90) {
                                  return Control_Bind.bind(Control_Monad_Transformerless_State.bindState)(Data_Function.apply(Control_Applicative.unless(Control_Monad_Transformerless_State.applicativeState)(inside(v2.value0)(clipEdge)))(Data_Function.apply(Control_Monad_Transformerless_State.modify)(Data_Maybe.maybe(Control_Category.id(Control_Category.categoryFn))(add)(Data_Segment_1.intersection(Linear_Epsilon.numberEpsilon)(Data_EuclideanRing.euclideanRingNumber)(subjEdge)(clipEdge)))))(function () {
                                      return Control_Monad_Transformerless_State.modify(add(v2.value1));
                                  });
                              };
                              if (!$90) {
                                  return Data_Function.apply(Control_Applicative.when(Control_Monad_Transformerless_State.applicativeState)(inside(v2.value0)(clipEdge)))(Data_Function.apply(Control_Monad_Transformerless_State.modify)(Data_Maybe.maybe(Control_Category.id(Control_Category.categoryFn))(add)(Data_Segment_1.intersection(Linear_Epsilon.numberEpsilon)(Data_EuclideanRing.euclideanRingNumber)(subjEdge)(clipEdge))));
                              };
                              throw new Error("Failed pattern match at Data.Polygon line 135, column 9 - line 142, column 70: " + [ $90.constructor.name ]);
                          });
                      });
                  });
              })));
          };
      };
  };
  var corners = function (v) {
      var mcs = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.uncons(v))(function (v1) {
          var ps1 = Data_Array.snoc(v1.tail)(v1.head);
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.uncons(ps1))(function (v2) {
              var ps2 = Data_Array.snoc(v2.tail)(v2.head);
              return Data_Function.apply(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(Utils.zipWith3(Data_Corner_1.Corner.create)(v)(ps1)(ps2));
          });
      });
      if (mcs instanceof Data_Maybe.Nothing) {
          return Utils.bug("corners: got bad polygon");
      };
      if (mcs instanceof Data_Maybe.Just) {
          return mcs.value0;
      };
      throw new Error("Failed pattern match at Data.Polygon line 66, column 22 - line 68, column 37: " + [ mcs.constructor.name ]);
  };

  /**
 *  | Based on http://stackoverflow.com/a/1881201/1211428
 */  
  var isConvex = function (dictRing) {
      return function (dictEpsilon) {
          return function (poly) {
              var czs = Data_Functor.map(Data_Functor.functorArray)(Data_Corner_1.crossZ(dictRing))(corners(poly));
              return Data_Foldable.all(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean)(function (z) {
                  return Linear_Epsilon.approxGreaterThanOrEq(dictRing)(dictEpsilon)(z)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
              })(czs) || Data_Foldable.all(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean)(function (z) {
                  return Linear_Epsilon.approxLessThanOrEq(dictRing)(dictEpsilon)(z)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
              })(czs);
          };
      };
  };

  /**
 *  | Only for convex polygons
 */  
  var clockWise = function (dictRing) {
      return function (dictEpsilon) {
          return function (poly) {
              return Data_Foldable.all(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean)(Data_Corner_1.clockWise(dictRing)(dictEpsilon))(corners(poly));
          };
      };
  };

  /**
 *  | https://en.wikipedia.org/wiki/Sutherland–Hodgman_algorithm
 *  `clipPoly` have to be convex
 */  
  var clip = function (clipPoly) {
      return function (subjPoly) {
          var inside = (function () {
              var $109 = clockWise(Data_Ring.ringNumber)(Linear_Epsilon.numberEpsilon)(clipPoly);
              if ($109) {
                  return Data_Segment_1.inside(Data_Ring.ringNumber)(Linear_Epsilon.numberEpsilon);
              };
              if (!$109) {
                  return Data_Segment_1.outside(Data_Ring.ringNumber)(Linear_Epsilon.numberEpsilon);
              };
              throw new Error("Failed pattern match at Data.Polygon line 150, column 16 - line 150, column 66: " + [ $109.constructor.name ]);
          })();
          return sutherlandHodgman(inside)(clipPoly)(subjPoly);
      };
  };
  var chainToPoly = function (ps) {
      return mkPoly(Data_Array.fromFoldable(Data_List.foldableList)(ps));
  };
  var prunePoly = function (dictRing) {
      return function (dictEpsilon) {
          return function (poly) {
              var chain = new Data_List.Cons(index(poly)(-1), polyToChain(poly));
              var chain$prime = pruneChain(dictRing)(dictEpsilon)(chain);
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_List.tail(chain$prime))(chainToPoly);
          };
      };
  };
  exports["clip"] = clip;
  exports["clockWise"] = clockWise;
  exports["corners"] = corners;
  exports["edges"] = edges;
  exports["index"] = index;
  exports["insertAt"] = insertAt;
  exports["isConvex"] = isConvex;
  exports["length"] = length;
  exports["mkPoly"] = mkPoly;
  exports["move"] = move;
  exports["origin"] = origin;
  exports["points"] = points;
  exports["prunePoly"] = prunePoly;
  exports["rect"] = rect;
  exports["square"] = square;
  exports["sutherlandHodgman"] = sutherlandHodgman;
  exports["uncons"] = uncons;
  exports["updateAt"] = updateAt;
  exports["polyFunctor"] = polyFunctor;
  exports["polyFoldable"] = polyFoldable;
  exports["polyTraversable"] = polyTraversable;
})(PS["Data.Polygon"] = PS["Data.Polygon"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Linear_R2 = PS["Linear.R2"];
  var Data_Polygon = PS["Data.Polygon"];
  var Utils = PS["Utils"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Ord = PS["Data.Ord"];        
  var bbRec = function (lo) {
      return function (hi) {
          return {
              lo: lo, 
              hi: hi
          };
      };
  };
  var boundingBox = function (dictOrd) {
      return function (poly) {
          var ps = Data_Polygon.points(poly);
          return Data_Function.apply(Utils.fromJust)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(bbRec)(Utils.foldlA2(Data_Foldable.foldableArray)(Linear_R2.p2Applicative)(Data_Ord.min(dictOrd))(ps)))(Utils.foldlA2(Data_Foldable.foldableArray)(Linear_R2.p2Applicative)(Data_Ord.max(dictOrd))(ps)));
      };
  };
  exports["bbRec"] = bbRec;
  exports["boundingBox"] = boundingBox;
})(PS["Data.BoundingBox"] = PS["Data.BoundingBox"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (v) {
      return v;
  };
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setCanvasWidth = function(width) {
      return function(canvas) {
          return function() {
              canvas.width = width;
              return canvas;
          };
      };
  };

  exports.setCanvasHeight = function(height) {
      return function(canvas) {
          return function() {
              canvas.height = height;
              return canvas;
          };
      };
  };

  exports.setLineWidth = function(width) {
      return function(ctx) {
          return function() {
              ctx.lineWidth = width;
              return ctx;
          };
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.setStrokeStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.strokeStyle = style;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.stroke = function(ctx) {
      return function() {
          ctx.stroke();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.arc = function(ctx) {
      return function(a) {
          return function() {
              ctx.arc(a.x, a.y, a.r, a.start, a.end);
              return ctx;
          };
      };
  };

  exports.fillRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.fillRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.clearRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.clearRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Prelude = PS["Prelude"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Data_Show = PS["Data.Show"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["arc"] = $foreign.arc;
  exports["beginPath"] = $foreign.beginPath;
  exports["clearRect"] = $foreign.clearRect;
  exports["fill"] = $foreign.fill;
  exports["fillRect"] = $foreign.fillRect;
  exports["getContext2D"] = $foreign.getContext2D;
  exports["lineTo"] = $foreign.lineTo;
  exports["moveTo"] = $foreign.moveTo;
  exports["setCanvasHeight"] = $foreign.setCanvasHeight;
  exports["setCanvasWidth"] = $foreign.setCanvasWidth;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["setLineWidth"] = $foreign.setLineWidth;
  exports["setStrokeStyle"] = $foreign.setStrokeStyle;
  exports["stroke"] = $foreign.stroke;
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Linear_R2 = PS["Linear.R2"];
  var Linear_Vector = PS["Linear.Vector"];
  var Data_Int = PS["Data.Int"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ord = PS["Data.Ord"];        
  var toGrid = function (o) {
      return function (gridSz) {
          return function (p) {
              return Linear_R2.invY(Data_Ring.ringInt)(Data_Functor.map(Linear_R2.p2Functor)(Data_Int.round)(Linear_Vector.fDivS(Linear_R2.p2Functor)(Data_EuclideanRing.euclideanRingNumber)(Data_Ring.sub(Linear_R2.p2Ring(Data_Ring.ringNumber))(p)(o))(gridSz)));
          };
      };
  };
  var gridSize = 8;
  var gridPrev = function (x) {
      return ((x / gridSize | 0) * gridSize | 0) - (function () {
          var $0 = x < 0;
          if ($0) {
              return gridSize;
          };
          if (!$0) {
              return 0;
          };
          throw new Error("Failed pattern match at Grid line 16, column 47 - line 16, column 76: " + [ $0.constructor.name ]);
      })();
  };
  var gridNext = function (x) {
      return gridPrev(x + (gridSize - 1) | 0);
  };
  var fromGrid = function (o) {
      return function (gridSz) {
          return function (p) {
              return Data_Semiring.add(Linear_R2.p2Semiring(Data_Semiring.semiringNumber))(o)(Linear_Vector.fMulS(Linear_R2.p2Functor)(Data_Semiring.semiringNumber)(Data_Functor.map(Linear_R2.p2Functor)(Data_Int.toNumber)(Linear_R2.invY(Data_Ring.ringInt)(p)))(gridSz));
          };
      };
  };
  exports["fromGrid"] = fromGrid;
  exports["gridNext"] = gridNext;
  exports["gridPrev"] = gridPrev;
  exports["gridSize"] = gridSize;
  exports["toGrid"] = toGrid;
})(PS["Grid"] = PS["Grid"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var rgba = function (r) {
      return function (g) {
          return function (b) {
              return function (a) {
                  return "rgba(" + (Data_Show.show(Data_Show.showInt)(r) + ("," + (Data_Show.show(Data_Show.showInt)(g) + ("," + (Data_Show.show(Data_Show.showInt)(b) + ("," + (Data_Show.show(Data_Show.showNumber)(a) + ")")))))));
              };
          };
      };
  };
  var rgb = function (r) {
      return function (g) {
          return function (b) {
              return "rgb(" + (Data_Show.show(Data_Show.showInt)(r) + ("," + (Data_Show.show(Data_Show.showInt)(g) + ("," + (Data_Show.show(Data_Show.showInt)(b) + ")")))));
          };
      };
  };
  var defaultStyle = {
      mainGrid: {
          style: rgb(0)(0)(0), 
          width: 1.0
      }, 
      subGrid: {
          style: rgb(0)(0)(0), 
          width: 0.25
      }, 
      subGridMinZoom: 0.5, 
      point: {
          style: rgb(0)(255)(0), 
          radius: 5.0
      }, 
      edge: {
          style: rgb(0)(255)(0), 
          width: 2.0
      }, 
      invalidFaceStyle: rgba(255)(0)(0)(0.3), 
      drawOrigin: true, 
      origin: {
          style: rgb(255)(0)(0), 
          radius: 5.0
      }
  };
  exports["defaultStyle"] = defaultStyle;
  exports["rgb"] = rgb;
  exports["rgba"] = rgba;
})(PS["Editor.Style"] = PS["Editor.Style"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Int = PS["Data.Int"];
  var Grid_1 = PS["Grid"];
  var Grid_1 = PS["Grid"];
  var Linear_R2 = PS["Linear.R2"];
  var Linear_Vector = PS["Linear.Vector"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];        
  var subGridSize = function (view) {
      return view.zoom * view.gridSize;
  };
  var toGrid = function (view) {
      return Grid_1.toGrid(view.origin)(subGridSize(view));
  };
  var mkView = function (w) {
      return function (h) {
          return {
              width: w, 
              height: h, 
              origin: Linear_Vector.fDivS(Linear_R2.p2Functor)(Data_EuclideanRing.euclideanRingNumber)(Linear_R2.p2(w)(h))(2.0), 
              zoom: 1.0, 
              gridSize: 8.0
          };
      };
  };
  var mainGridSize = function (view) {
      return view.zoom * view.gridSize * Data_Int.toNumber(Grid_1.gridSize);
  };
  var fromGrid = function (view) {
      return Grid_1.fromGrid(view.origin)(subGridSize(view));
  };
  exports["fromGrid"] = fromGrid;
  exports["mainGridSize"] = mainGridSize;
  exports["mkView"] = mkView;
  exports["subGridSize"] = subGridSize;
  exports["toGrid"] = toGrid;
})(PS["Editor.View"] = PS["Editor.View"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Array = PS["Data.Array"];
  var Data_Polygon = PS["Data.Polygon"];
  var Data_BoundingBox = PS["Data.BoundingBox"];
  var Linear_R2 = PS["Linear.R2"];
  var Linear_Vector = PS["Linear.Vector"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Data_Segment = PS["Data.Segment"];
  var Data_Maybe = PS["Data.Maybe"];
  var RedEclipse_Face_Side = PS["RedEclipse.Face.Side"];
  var Grid = PS["Grid"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];        
  var toFaceCoords = function (o) {
      return function (p) {
          var p$prime = Data_Functor.map(Linear_R2.p2Functor)(Data_Int.round)(p);
          var onGrid = Linear_Epsilon.approxEQ(Linear_R2.p2Ring(Data_Ring.ringNumber))(Linear_R2.p2Epsilon(Linear_Epsilon.numberEpsilon))(p)(Data_Functor.map(Linear_R2.p2Functor)(Data_Int.toNumber)(p$prime));
          var inFace = function (z) {
              return 0 <= z && z <= Grid.gridSize;
          };
          var f = Data_Ring.sub(Linear_R2.p2Ring(Data_Ring.ringInt))(p$prime)(o);
          var $0 = onGrid && (inFace((Linear_R2.r2(Linear_R2.p2r2)(f)).x) && inFace((Linear_R2.r2(Linear_R2.p2r2)(f)).y));
          if ($0) {
              return new Data_Maybe.Just(f);
          };
          if (!$0) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at RedEclipse.Face line 123, column 20 - line 125, column 34: " + [ $0.constructor.name ]);
      };
  };
  var validFace = function (poly) {
      var onGridAndConvex = (function () {
          var o = Data_Functor.map(Linear_R2.p2Functor)(function ($1) {
              return Grid.gridPrev(Data_Int.ceil($1));
          })(Data_Polygon.origin(Data_Ord.ordNumber)(poly));
          var mpoly$prime = Data_Function.apply(Data_Traversable.sequence(Data_Polygon.polyTraversable)(Data_Maybe.applicativeMaybe))(Data_Functor.map(Data_Polygon.polyFunctor)(toFaceCoords(o))(poly));
          return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(new Data_Maybe.Just(true))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Polygon.isConvex(Data_Ring.ringInt)(Linear_Epsilon.intEpsilon))(mpoly$prime));
      })();
      var len = Data_Polygon.length(poly);
      var has3Or4Edges = len === 3 || len === 4;
      return has3Or4Edges && onGridAndConvex;
  };
  var validatePoly = function (poly) {
      var bb = Data_BoundingBox.boundingBox(Data_Ord.ordInt)(poly);
      var phi = Data_Functor.map(Linear_R2.p2Functor)(Grid.gridNext)(bb.hi);
      var hi = Linear_R2.r2(Linear_R2.p2r2)(phi);
      var plo = Data_Functor.map(Linear_R2.p2Functor)(Grid.gridPrev)(bb.lo);
      var lo = Linear_R2.r2(Linear_R2.p2r2)(plo);
      var height = hi.y - lo.y;
      var poly$prime = Data_Polygon.move(Data_Semiring.semiringInt)(poly)(Data_Ring.negate(Linear_R2.v2Ring(Data_Ring.ringInt))(lo));
      var oPoly = Data_Functor.map(Data_Polygon.polyFunctor)(Data_Functor.map(Linear_R2.p2Functor)(Data_Int.toNumber))(poly$prime);
      var width = hi.x - lo.x;
      var validity = Data_Function.apply(Data_Traversable["for"](Data_Identity.applicativeIdentity)(Data_Traversable.traversableArray)(Data_Array.range(0)((height / Grid.gridSize | 0) - 1)))(function (y) {
          return Data_Function.apply(Data_Traversable["for"](Data_Identity.applicativeIdentity)(Data_Traversable.traversableArray)(Data_Array.range(0)((width / Grid.gridSize | 0) - 1)))(function (x) {
              var cs = Data_Polygon.square(Data_Semiring.semiringNumber)(Data_Int.toNumber(Grid.gridSize))(Data_Functor.map(Linear_R2.p2Functor)(Data_Int.toNumber)(Linear_Vector.fMulS(Linear_R2.p2Functor)(Data_Semiring.semiringInt)(Linear_R2.p2(x)(y))(Grid.gridSize)));
              var intersection = Data_Polygon.clip(cs)(oPoly);
              return Data_Polygon.length(intersection) < 3 || validFace(intersection);
          });
      });
      return {
          lo: plo, 
          hi: phi, 
          validity: Data_Identity.runIdentity(validity)
      };
  };
  exports["validatePoly"] = validatePoly;
})(PS["RedEclipse.Face"] = PS["RedEclipse.Face"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Linear_R2 = PS["Linear.R2"];
  var Data_Polygon = PS["Data.Polygon"];
  var Grid = PS["Grid"];
  var RedEclipse_Face = PS["RedEclipse.Face"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var mkWorkArea = function (poly) {
      return {
          poly: poly, 
          point: Data_Maybe.Nothing.value, 
          validity: RedEclipse_Face.validatePoly(poly)
      };
  };
  exports["mkWorkArea"] = mkWorkArea;
})(PS["Editor.WorkArea"] = PS["Editor.WorkArea"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Grid = PS["Grid"];
  var Data_Polygon = PS["Data.Polygon"];
  var Editor_Style = PS["Editor.Style"];
  var Editor_View = PS["Editor.View"];
  var Editor_WorkArea = PS["Editor.WorkArea"];        
  var mkEditor = function (ctx) {
      return function (w) {
          return function (h) {
              return function (poly) {
                  return {
                      context: ctx, 
                      style: Editor_Style.defaultStyle, 
                      view: Editor_View.mkView(w)(h), 
                      workArea: Editor_WorkArea.mkWorkArea(poly)
                  };
              };
          };
      };
  };
  exports["mkEditor"] = mkEditor;
})(PS["Editor.Editor"] = PS["Editor.Editor"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Foldable = PS["Data.Foldable"];
  var Linear_R2 = PS["Linear.R2"];
  var Linear_Metric = PS["Linear.Metric"];
  var Data_Polygon = PS["Data.Polygon"];
  var Data_Segment_1 = PS["Data.Segment"];
  var Data_Segment_1 = PS["Data.Segment"];
  var Data_Corner = PS["Data.Corner"];
  var Editor_Editor = PS["Editor.Editor"];
  var Grid = PS["Grid"];
  var Editor_View = PS["Editor.View"];
  var Editor_WorkArea = PS["Editor.WorkArea"];
  var Drag_Drag = PS["Drag.Drag"];
  var Linear_Epsilon = PS["Linear.Epsilon"];
  var Utils = PS["Utils"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];        
  var stopEdit = function (e) {
      return function (finish) {
          return function (current) {
              var $3 = {};
              for (var $4 in e) {
                  if (e.hasOwnProperty($4)) {
                      $3[$4] = e[$4];
                  };
              };
              $3.workArea = Editor_WorkArea.mkWorkArea(finish(current));
              return $3;
          };
      };
  };
  var onPoly = function (dist) {
      return function (poly) {
          return function (p) {
              var prune = function (editedPoly) {
                  return Data_Maybe.fromMaybe(editedPoly)(Data_Polygon.prunePoly(Data_Ring.ringNumber)(Linear_Epsilon.numberEpsilon)(editedPoly));
              };
              var point = function (v) {
                  var $6 = Linear_Metric.distance(Linear_R2.p2Metric)(p)(v.elem.value1) < dist;
                  if ($6) {
                      return new Data_Maybe.Just({
                          point: {
                              before: v.elem.value0, 
                              point: p, 
                              after: v.elem.value2
                          }, 
                          finish: function (e) {
                              return prune(Data_Polygon.updateAt(v.idx + 1 | 0)(e)(poly));
                          }
                      });
                  };
                  if (!$6) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Drag.EditPoint line 34, column 7 - line 37, column 22: " + [ $6.constructor.name ]);
              };
              var firstPoint = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe_First.monoidFirst)(function ($31) {
                  return Data_Maybe_First.First(point($31));
              })(Utils.enumerate(Data_Traversable.traversableArray)(Data_Polygon.corners(poly)));
              var edge = function (v) {
                  var $13 = Data_Segment_1.distance(p)(v.elem) < dist;
                  if ($13) {
                      return new Data_Maybe.Just({
                          point: {
                              before: v.elem.value0, 
                              point: p, 
                              after: v.elem.value1
                          }, 
                          finish: function (e) {
                              return prune(Data_Polygon.insertAt(v.idx + 1 | 0)(e)(poly));
                          }
                      });
                  };
                  if (!$13) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Drag.EditPoint line 39, column 7 - line 42, column 22: " + [ $13.constructor.name ]);
              };
              var firstEdge = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe_First.monoidFirst)(function ($32) {
                  return Data_Maybe_First.First(edge($32));
              })(Utils.enumerate(Data_Traversable.traversableArray)(Data_Polygon.edges(poly)));
              return Data_Maybe_First.runFirst(Data_Semigroup.append(Data_Maybe_First.semigroupFirst)(firstPoint)(firstEdge));
          };
      };
  };
  var moveEdit = function (e) {
      return function (current) {
          var toGrid$prime = Editor_View.toGrid(e.view);
          if (e.workArea.point instanceof Data_Maybe.Nothing) {
              return e;
          };
          if (e.workArea.point instanceof Data_Maybe.Just) {
              var $23 = {};
              for (var $24 in e) {
                  if (e.hasOwnProperty($24)) {
                      $23[$24] = e[$24];
                  };
              };
              $23.workArea = (function () {
                  var $21 = {};
                  for (var $22 in e.workArea) {
                      if (e.workArea.hasOwnProperty($22)) {
                          $21[$22] = e.workArea[$22];
                      };
                  };
                  $21.point = new Data_Maybe.Just((function () {
                      var $19 = {};
                      for (var $20 in e.workArea.point.value0) {
                          if (e.workArea.point.value0.hasOwnProperty($20)) {
                              $19[$20] = e.workArea.point.value0[$20];
                          };
                      };
                      $19.point = toGrid$prime(current);
                      return $19;
                  })());
                  return $21;
              })();
              return $23;
          };
          throw new Error("Failed pattern match at Drag.EditPoint line 59, column 3 - line 61, column 99: " + [ e.workArea.point.constructor.name ]);
      };
  };
  var editPointDrag = function (e) {
      return function (start) {
          var toGrid$prime = Editor_View.toGrid(e.view);
          var poly$prime = Data_Functor.map(Data_Polygon.polyFunctor)(Editor_View.fromGrid(e.view))(e.workArea.poly);
          return Control_Bind.bind(Data_Maybe.bindMaybe)(onPoly(e.style.point.radius)(poly$prime)(start))(function (v) {
              var ep = {
                  before: toGrid$prime(v.point.before), 
                  point: toGrid$prime(v.point.point), 
                  after: toGrid$prime(v.point.after)
              };
              var e$prime = (function () {
                  var $29 = {};
                  for (var $30 in e) {
                      if (e.hasOwnProperty($30)) {
                          $29[$30] = e[$30];
                      };
                  };
                  $29.workArea = (function () {
                      var $27 = {};
                      for (var $28 in e.workArea) {
                          if (e.workArea.hasOwnProperty($28)) {
                              $27[$28] = e.workArea[$28];
                          };
                      };
                      $27.point = new Data_Maybe.Just(ep);
                      return $27;
                  })();
                  return $29;
              })();
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                  move: moveEdit(e$prime), 
                  stop: stopEdit(e$prime)(function ($33) {
                      return Data_Functor.map(Data_Polygon.polyFunctor)(toGrid$prime)(v.finish($33));
                  })
              });
          });
      };
  };
  exports["editPointDrag"] = editPointDrag;
  exports["moveEdit"] = moveEdit;
  exports["onPoly"] = onPoly;
  exports["stopEdit"] = stopEdit;
})(PS["Drag.EditPoint"] = PS["Drag.EditPoint"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Drag_Drag = PS["Drag.Drag"];
  var Editor_Editor = PS["Editor.Editor"];
  var Linear_R2 = PS["Linear.R2"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];        
  var scroll = function (e) {
      return function (diff) {
          var $2 = {};
          for (var $3 in e) {
              if (e.hasOwnProperty($3)) {
                  $2[$3] = e[$3];
              };
          };
          $2.view = (function () {
              var $0 = {};
              for (var $1 in e.view) {
                  if (e.view.hasOwnProperty($1)) {
                      $0[$1] = e.view[$1];
                  };
              };
              $0.origin = Data_Semiring.add(Linear_R2.p2Semiring(Data_Semiring.semiringNumber))(e.view.origin)(diff);
              return $0;
          })();
          return $2;
      };
  };
  var scrollDrag = function (e) {
      return function (start) {
          var doScroll = function (current) {
              return scroll(e)(Data_Ring.sub(Linear_R2.p2Ring(Data_Ring.ringNumber))(current)(start));
          };
          return new Data_Maybe.Just({
              move: doScroll, 
              stop: doScroll
          });
      };
  };
  exports["scroll"] = scroll;
  exports["scrollDrag"] = scrollDrag;
})(PS["Drag.Scroll"] = PS["Drag.Scroll"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var $$Math = PS["Math"];
  var Data_Int = PS["Data.Int"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Linear_R2 = PS["Linear.R2"];
  var Linear_Vector = PS["Linear.Vector"];
  var Data_Polygon = PS["Data.Polygon"];
  var RedEclipse_Face = PS["RedEclipse.Face"];
  var Editor_Style = PS["Editor.Style"];
  var Editor_Editor = PS["Editor.Editor"];
  var Editor_View = PS["Editor.View"];
  var Editor_WorkArea = PS["Editor.WorkArea"];
  var Utils = PS["Utils"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];        
  var drawValidity = function (style) {
      return function (v) {
          return function (validity) {
              return function (gridSz) {
                  return function (ctx) {
                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Utils.enumerate(Data_Traversable.traversableArray)(validity))(function (row) {
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Utils.enumerate(Data_Traversable.traversableArray)(row.elem))(function (p) {
                              return Data_Function.apply(function ($42) {
                                  return Control_Applicative.unless(Control_Monad_Eff.applicativeEff)(p.elem)(Data_Functor["void"](Control_Monad_Eff.functorEff)($42));
                              })(function __do() {
                                  Graphics_Canvas.setFillStyle(style)(ctx)();
                                  return Graphics_Canvas.fillRect(ctx)({
                                      x: v.x + Data_Int.toNumber(p.idx) * gridSz, 
                                      y: v.y + Data_Int.toNumber(-row.idx) * gridSz, 
                                      w: gridSz, 
                                      h: -gridSz
                                  })();
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var drawPoint = function (style) {
      return function (v) {
          return function (ctx) {
              var thePoint = {
                  x: v.x, 
                  y: v.y, 
                  r: style.radius, 
                  start: 0.0, 
                  end: 2.0 * $$Math.pi
              };
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                  Graphics_Canvas.beginPath(ctx)();
                  Graphics_Canvas.setFillStyle(style.style)(ctx)();
                  Graphics_Canvas.arc(ctx)(thePoint)();
                  return Graphics_Canvas.fill(ctx)();
              });
          };
      };
  };
  var drawPoly = function (lstyle) {
      return function (pstyle) {
          return function (poly) {
              return function (ctx) {
                  var ht = Data_Polygon.uncons(poly);
                  var h = Linear_R2.r2(Linear_R2.p2r2)(ht.head);
                  return function __do() {
                      Graphics_Canvas.beginPath(ctx)();
                      Graphics_Canvas.setStrokeStyle(lstyle.style)(ctx)();
                      Graphics_Canvas.setLineWidth(lstyle.width)(ctx)();
                      Graphics_Canvas.moveTo(ctx)(h.x)(h.y)();
                      Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(ht.tail)(function (v) {
                          return Graphics_Canvas.lineTo(ctx)(v.x)(v.y);
                      })();
                      Graphics_Canvas.lineTo(ctx)(h.x)(h.y)();
                      Graphics_Canvas.stroke(ctx)();
                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Polygon.points(poly))(function (p) {
                          return drawPoint(pstyle)(p)(ctx);
                      })();
                  };
              };
          };
      };
  };
  var drawGrid = function (style) {
      return function (v) {
          return function (gridSz) {
              return function (ctx) {
                  var start = Data_Function.apply(Linear_R2.r2(Linear_R2.p2r2))(Data_Ring.sub(Linear_R2.p2Ring(Data_Ring.ringNumber))(v.origin)(Linear_Vector.fMulS(Linear_R2.p2Functor)(Data_Semiring.semiringNumber)(Data_Functor.map(Linear_R2.p2Functor)(function ($43) {
                      return Data_Int.toNumber(Data_Int.round($43));
                  })(Linear_Vector.fDivS(Linear_R2.p2Functor)(Data_EuclideanRing.euclideanRingNumber)(v.origin)(gridSz)))(gridSz)));
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                      Graphics_Canvas.beginPath(ctx)();
                      Graphics_Canvas.setStrokeStyle(style.style)(ctx)();
                      Graphics_Canvas.setLineWidth(style.width)(ctx)();
                      Data_Function.apply(Utils.whileM_(Control_Monad_Eff.monadEff)(start.x)(function (x) {
                          return x <= v.width;
                      }))(function (x) {
                          return function __do() {
                              Graphics_Canvas.moveTo(ctx)(x)(0.0)();
                              Graphics_Canvas.lineTo(ctx)(x)(v.height)();
                              return x + gridSz;
                          };
                      })();
                      Data_Function.apply(Utils.whileM_(Control_Monad_Eff.monadEff)(start.y)(function (y) {
                          return y <= v.height;
                      }))(function (y) {
                          return function __do() {
                              Graphics_Canvas.moveTo(ctx)(0.0)(y)();
                              Graphics_Canvas.lineTo(ctx)(v.width)(y)();
                              return y + gridSz;
                          };
                      })();
                      return Graphics_Canvas.stroke(ctx)();
                  });
              };
          };
      };
  };
  var drawEditPoint = function (lstyle) {
      return function (pstyle) {
          return function (v) {
              return function (ctx) {
                  return function __do() {
                      Graphics_Canvas.beginPath(ctx)();
                      Graphics_Canvas.setStrokeStyle(lstyle.style)(ctx)();
                      Graphics_Canvas.setLineWidth(lstyle.width)(ctx)();
                      Graphics_Canvas.moveTo(ctx)(v.before.x)(v.before.y)();
                      Graphics_Canvas.lineTo(ctx)(v.point.x)(v.point.y)();
                      Graphics_Canvas.lineTo(ctx)(v.after.x)(v.after.y)();
                      Graphics_Canvas.stroke(ctx)();
                      return drawPoint(pstyle)(v.point)(ctx)();
                  };
              };
          };
      };
  };
  var drawWorkArea = function (v) {
      var subGridSz = Editor_View.subGridSize(v.view);
      var mainGridSz = Editor_View.mainGridSize(v.view);
      var fromGrid$prime = Editor_View.fromGrid(v.view);
      var poly$prime = Data_Functor.map(Data_Polygon.polyFunctor)(fromGrid$prime)(v.workArea.poly);
      return function __do() {
          Graphics_Canvas.clearRect(v.context)({
              x: 0.0, 
              y: 0.0, 
              w: v.view.width, 
              h: v.view.height
          })();
          Data_Function.apply(Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v.view.zoom > v.style.subGridMinZoom))(drawGrid(v.style.subGrid)(v.view)(subGridSz)(v.context))();
          drawGrid(v.style.mainGrid)(v.view)(mainGridSz)(v.context)();
          Data_Function.apply(Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v.style.drawOrigin))(drawPoint(v.style.origin)(v.view.origin)(v.context))();
          drawValidity(v.style.invalidFaceStyle)(fromGrid$prime(v.workArea.validity.lo))(v.workArea.validity.validity)(mainGridSz)(v.context)();
          drawPoly(v.style.edge)(v.style.point)(poly$prime)(v.context)();
          if (v.workArea.point instanceof Data_Maybe.Nothing) {
              return Data_Unit.unit;
          };
          if (v.workArea.point instanceof Data_Maybe.Just) {
              return drawEditPoint(v.style.edge)(v.style.point)({
                  before: fromGrid$prime(v.workArea.point.value0.before), 
                  point: fromGrid$prime(v.workArea.point.value0.point), 
                  after: fromGrid$prime(v.workArea.point.value0.after)
              })(v.context)();
          };
          throw new Error("Failed pattern match at Editor.Render line 95, column 3 - line 99, column 86: " + [ v.workArea.point.constructor.name ]);
      };
  };
  exports["drawEditPoint"] = drawEditPoint;
  exports["drawGrid"] = drawGrid;
  exports["drawPoint"] = drawPoint;
  exports["drawPoly"] = drawPoly;
  exports["drawValidity"] = drawValidity;
  exports["drawWorkArea"] = drawWorkArea;
})(PS["Editor.Render"] = PS["Editor.Render"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module JQuery

  exports.clientX = function (event) {
      return function () {
          return event.clientX;
      };
  };


  exports.clientY = function (event) {
      return function () {
          return event.clientY;
      };
  };
})(PS["JQuery"] = PS["JQuery"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["JQuery"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_JQuery = PS["Control.Monad.Eff.JQuery"];
  var DOM = PS["DOM"];
  exports["clientX"] = $foreign.clientX;
  exports["clientY"] = $foreign.clientY;
})(PS["JQuery"] = PS["JQuery"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Ref

  exports.newRef = function (val) {
      return function () {
          return { value: val };
      };
  };

  exports.readRef = function (ref) {
      return function () {
          return ref.value;
      };
  };

  exports.modifyRef = function (ref) {
      return function (f) {
          return function () {
              return ref.value = f(ref.value);
          };
      };
  };
})(PS["Ref"] = PS["Ref"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["modifyRef"] = $foreign.modifyRef;
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
})(PS["Ref"] = PS["Ref"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_JQuery = PS["Control.Monad.Eff.JQuery"];
  var DOM = PS["DOM"];
  var JQuery = PS["JQuery"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Either = PS["Data.Either"];
  var Data_Int = PS["Data.Int"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Ref = PS["Ref"];
  var Linear_R2 = PS["Linear.R2"];
  var Editor_Editor = PS["Editor.Editor"];
  var Editor_Render = PS["Editor.Render"];
  var Drag_Drag = PS["Drag.Drag"];
  var Drag_Scroll = PS["Drag.Scroll"];
  var Drag_EditPoint = PS["Drag.EditPoint"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Show = PS["Data.Show"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];        
  var onZoom = function (zoomIn) {
      return function (stateRef) {
          return function (event) {
              return function (jq) {
                  var diff = (function () {
                      if (zoomIn) {
                          return 0.1;
                      };
                      if (!zoomIn) {
                          return -0.1;
                      };
                      throw new Error("Failed pattern match at Interactive line 100, column 16 - line 102, column 1: " + [ zoomIn.constructor.name ]);
                  })();
                  return function __do() {
                      Control_Monad_Eff_JQuery.preventDefault(event)();
                      var v = Ref.modifyRef(stateRef)(function (s) {
                          var z = s.editor.view.zoom + diff;
                          var $15 = 0.2 <= z;
                          if ($15) {
                              var $20 = {};
                              for (var $21 in s) {
                                  if (s.hasOwnProperty($21)) {
                                      $20[$21] = s[$21];
                                  };
                              };
                              $20.editor = (function () {
                                  var $18 = {};
                                  for (var $19 in s.editor) {
                                      if (s.editor.hasOwnProperty($19)) {
                                          $18[$19] = s.editor[$19];
                                      };
                                  };
                                  $18.view = (function () {
                                      var $16 = {};
                                      for (var $17 in s.editor.view) {
                                          if (s.editor.view.hasOwnProperty($17)) {
                                              $16[$17] = s.editor.view[$17];
                                          };
                                      };
                                      $16.zoom = z;
                                      return $16;
                                  })();
                                  return $18;
                              })();
                              return $20;
                          };
                          if (!$15) {
                              return s;
                          };
                          throw new Error("Failed pattern match at Interactive line 96, column 8 - line 98, column 15: " + [ $15.constructor.name ]);
                      })();
                      return Editor_Render.drawWorkArea(v.editor)();
                  };
              };
          };
      };
  };
  var onSave = function (stateRef) {
      return function (event) {
          return function (jq) {
              return function __do() {
                  Control_Monad_Eff_JQuery.preventDefault(event)();
                  var v = Control_Monad_Eff_JQuery.select("#depth input")();
                  var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Foreign.readString)(Control_Monad_Eff_JQuery.getValue(v))();
                  var eVal = Control_Bind.bind(Data_Either.bindEither)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Show.show(Data_Foreign.showForeignError))(v1))(function (v2) {
                      return Data_Maybe.maybe(new Data_Either.Left("Not Int"))(Data_Either.Right.create)(Data_Int.fromString(v2));
                  });
                  return Control_Monad_Eff_Console.logShow(Data_Either.showEither(Data_Show.showString)(Data_Show.showInt))(eVal)();
              };
          };
      };
  };
  var mouseXY = function (e) {
      return Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Linear_R2.p2)(JQuery.clientX(e)))(JQuery.clientY(e));
  };
  var onMouseDown = function (stateRef) {
      return function (event) {
          return function (jq) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                  var v = mouseXY(event)();
                  return Ref.modifyRef(stateRef)(function (s) {
                      var $27 = {};
                      for (var $28 in s) {
                          if (s.hasOwnProperty($28)) {
                              $27[$28] = s[$28];
                          };
                      };
                      $27.drag = Data_Maybe_First.runFirst(Data_Semigroup.append(Data_Maybe_First.semigroupFirst)(Drag_EditPoint.editPointDrag(s.editor)(v))(Drag_Scroll.scrollDrag(s.editor)(v)));
                      return $27;
                  })();
              });
          };
      };
  };
  var onMouseMove = function (stateRef) {
      return function (event) {
          return function (jq) {
              return function __do() {
                  var v = Ref.readRef(stateRef)();
                  var v1 = mouseXY(event)();
                  if (v.drag instanceof Data_Maybe.Nothing) {
                      return Data_Unit.unit;
                  };
                  if (v.drag instanceof Data_Maybe.Just) {
                      return Editor_Render.drawWorkArea(v.drag.value0.move(v1))();
                  };
                  throw new Error("Failed pattern match at Interactive line 60, column 3 - line 62, column 50: " + [ v.drag.constructor.name ]);
              };
          };
      };
  };
  var onMouseUp = function (stateRef) {
      return function (event) {
          return function (jq) {
              return function __do() {
                  var v = mouseXY(event)();
                  var v1 = Ref.modifyRef(stateRef)(function (s) {
                      if (s.drag instanceof Data_Maybe.Nothing) {
                          return s;
                      };
                      if (s.drag instanceof Data_Maybe.Just) {
                          return {
                              drag: Data_Maybe.Nothing.value, 
                              editor: s.drag.value0.stop(v)
                          };
                      };
                      throw new Error("Failed pattern match at Interactive line 76, column 5 - line 79, column 49: " + [ s.drag.constructor.name ]);
                  })();
                  return Editor_Render.drawWorkArea(v1.editor)();
              };
          };
      };
  };
  var setUpHandlers = function (editor) {
      return function __do() {
          var v = Ref.newRef({
              drag: Data_Maybe.Nothing.value, 
              editor: editor
          })();
          var v1 = Control_Monad_Eff_JQuery.select("#work-area")();
          Control_Monad_Eff_JQuery.on("mousedown")(onMouseDown(v))(v1)();
          Control_Monad_Eff_JQuery.on("mousemove")(onMouseMove(v))(v1)();
          Control_Monad_Eff_JQuery.on("mouseup")(onMouseUp(v))(v1)();
          var v2 = Control_Monad_Eff_JQuery.select("#zoom-in")();
          Control_Monad_Eff_JQuery.on("click")(onZoom(true)(v))(v2)();
          var v3 = Control_Monad_Eff_JQuery.select("#zoom-out")();
          Control_Monad_Eff_JQuery.on("click")(onZoom(false)(v))(v3)();
          var v4 = Control_Monad_Eff_JQuery.select("#save")();
          return Control_Monad_Eff_JQuery.on("click")(onSave(v))(v4)();
      };
  };
  exports["mouseXY"] = mouseXY;
  exports["onMouseDown"] = onMouseDown;
  exports["onMouseMove"] = onMouseMove;
  exports["onMouseUp"] = onMouseUp;
  exports["onSave"] = onSave;
  exports["onZoom"] = onZoom;
  exports["setUpHandlers"] = setUpHandlers;
})(PS["Interactive"] = PS["Interactive"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Polygon = PS["Data.Polygon"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Editor_Editor = PS["Editor.Editor"];
  var Editor_Render = PS["Editor.Render"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Grid = PS["Grid"];
  var Interactive = PS["Interactive"];
  var Linear_R2 = PS["Linear.R2"];
  var Ref = PS["Ref"];
  var Utils = PS["Utils"];
  var Data_Function = PS["Data.Function"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var poly = Data_Function.apply(Utils.fromJust)(Data_Polygon.mkPoly([ Linear_R2.p2(0)(2), Linear_R2.p2(16)(0), Linear_R2.p2(8)(8), Linear_R2.p2(-1)(16) ]));
  var main = function __do() {
      var v = DOM_HTML.window();
      var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Int.toNumber)(DOM_HTML_Window.innerWidth(v))();
      var v2 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Int.toNumber)(DOM_HTML_Window.innerHeight(v))();
      var v3 = Graphics_Canvas.getCanvasElementById("work-area")();
      if (v3 instanceof Data_Maybe.Nothing) {
          return Control_Monad_Eff_Console.log("Failed to find #work-area")();
      };
      if (v3 instanceof Data_Maybe.Just) {
          Graphics_Canvas.setCanvasWidth(v1)(v3.value0)();
          Graphics_Canvas.setCanvasHeight(v2)(v3.value0)();
          var v4 = Graphics_Canvas.getContext2D(v3.value0)();
          Data_Function.apply(Control_Monad_Eff_Console.log)("Found #work-area and set width = " + (Data_Show.show(Data_Show.showNumber)(v1) + (", height = " + Data_Show.show(Data_Show.showNumber)(v2))))();
          var editor = Editor_Editor.mkEditor(v4)(v1)(v2)(poly);
          Editor_Render.drawWorkArea(editor)();
          return Interactive.setUpHandlers(editor)();
      };
      throw new Error("Failed pattern match at Main line 35, column 3 - line 44, column 21: " + [ v3.constructor.name ]);
  };
  exports["main"] = main;
  exports["poly"] = poly;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
